"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createTree = void 0;
/* eslint-disable no-bitwise */
const mpl_toolbox_1 = require("@metaplex-foundation/mpl-toolbox");
const umi_1 = require("@metaplex-foundation/umi");
const generated_1 = require("./generated");
const hooked_1 = require("./hooked");
const createTree = async (context, input) => {
    const space = input.merkleTreeSize ??
        (0, hooked_1.getMerkleTreeSize)(input.maxDepth, input.maxBufferSize, input.canopyDepth);
    const lamports = await context.rpc.getRent(space);
    return ((0, umi_1.transactionBuilder)()
        // Create the empty Merkle tree account.
        .add((0, mpl_toolbox_1.createAccount)(context, {
        payer: input.payer ?? context.payer,
        newAccount: input.merkleTree,
        lamports,
        space,
        programId: context.programs.getPublicKey('splAccountCompression', generated_1.SPL_ACCOUNT_COMPRESSION_PROGRAM_ID),
    }))
        // Create the tree config.
        .add((0, generated_1.createTreeConfig)(context, {
        ...input,
        merkleTree: input.merkleTree.publicKey,
    })));
};
exports.createTree = createTree;
//# sourceMappingURL=createTree.js.map