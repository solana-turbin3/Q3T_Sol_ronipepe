"use strict";
/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.isLeafSchema = exports.leafSchema = exports.getLeafSchemaSerializer = void 0;
const serializers_1 = require("@metaplex-foundation/umi/serializers");
function getLeafSchemaSerializer() {
    return (0, serializers_1.dataEnum)([
        [
            'V1',
            (0, serializers_1.struct)([
                ['id', (0, serializers_1.publicKey)()],
                ['owner', (0, serializers_1.publicKey)()],
                ['delegate', (0, serializers_1.publicKey)()],
                ['nonce', (0, serializers_1.u64)()],
                ['dataHash', (0, serializers_1.bytes)({ size: 32 })],
                ['creatorHash', (0, serializers_1.bytes)({ size: 32 })],
            ]),
        ],
    ], { description: 'LeafSchema' });
}
exports.getLeafSchemaSerializer = getLeafSchemaSerializer;
function leafSchema(kind, data) {
    return Array.isArray(data)
        ? { __kind: kind, fields: data }
        : { __kind: kind, ...(data ?? {}) };
}
exports.leafSchema = leafSchema;
function isLeafSchema(kind, value) {
    return value.__kind === kind;
}
exports.isLeafSchema = isLeafSchema;
//# sourceMappingURL=leafSchema.js.map