import { PublicKey } from '@metaplex-foundation/umi';
import { Serializer } from '@metaplex-foundation/umi/serializers';
import { CompressionAccountType, ConcurrentMerkleTreeHeaderData, ConcurrentMerkleTreeHeaderDataArgs } from '../generated';
import { ConcurrentMerkleTree, ConcurrentMerkleTreeArgs } from './concurrentMerkleTree';
export declare type MerkleTreeAccountData = {
    discriminator: CompressionAccountType;
    treeHeader: ConcurrentMerkleTreeHeaderData;
    tree: ConcurrentMerkleTree;
    canopy: PublicKey[];
};
export declare type MerkleTreeAccountDataArgs = {
    treeHeader: ConcurrentMerkleTreeHeaderDataArgs;
    tree: ConcurrentMerkleTreeArgs;
    canopy: PublicKey[];
};
export declare const getMerkleTreeAccountDataSerializer: () => Serializer<MerkleTreeAccountDataArgs, MerkleTreeAccountData>;
export declare const getMerkleTreeAccountDataV1Serializer: (maxDepth: number, maxBufferSize: number) => Serializer<MerkleTreeAccountDataArgs, MerkleTreeAccountData>;
export declare const getMerkleTreeSize: (maxDepth: number, maxBufferSize: number, canopyDepth?: number) => number;
