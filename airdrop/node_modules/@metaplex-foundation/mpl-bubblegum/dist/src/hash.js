"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.hashMetadataCreators = exports.hashMetadataData = exports.hashMetadata = exports.hashLeaf = exports.hash = void 0;
const serializers_1 = require("@metaplex-foundation/umi/serializers");
const sha3_1 = require("@noble/hashes/sha3");
const generated_1 = require("./generated");
const leafAssetId_1 = require("./leafAssetId");
function hash(input) {
    return (0, sha3_1.keccak_256)(Array.isArray(input) ? (0, serializers_1.mergeBytes)(input) : input);
}
exports.hash = hash;
function hashLeaf(context, input) {
    const delegate = input.delegate ?? input.owner;
    const nftVersion = input.nftVersion ?? 1;
    const [leafAssetId] = (0, leafAssetId_1.findLeafAssetIdPda)(context, {
        merkleTree: input.merkleTree,
        leafIndex: input.leafIndex,
    });
    return hash([
        (0, serializers_1.u8)().serialize(nftVersion),
        (0, serializers_1.publicKey)().serialize(leafAssetId),
        (0, serializers_1.publicKey)().serialize(input.owner),
        (0, serializers_1.publicKey)().serialize(delegate),
        (0, serializers_1.u64)().serialize(input.leafIndex),
        hashMetadata(input.metadata),
    ]);
}
exports.hashLeaf = hashLeaf;
function hashMetadata(metadata) {
    return (0, serializers_1.mergeBytes)([
        hashMetadataData(metadata),
        hashMetadataCreators(metadata.creators),
    ]);
}
exports.hashMetadata = hashMetadata;
function hashMetadataData(metadata) {
    return hash([
        hash((0, generated_1.getMetadataArgsSerializer)().serialize(metadata)),
        (0, serializers_1.u16)().serialize(metadata.sellerFeeBasisPoints),
    ]);
}
exports.hashMetadataData = hashMetadataData;
function hashMetadataCreators(creators) {
    return hash((0, serializers_1.array)((0, generated_1.getCreatorSerializer)(), { size: 'remainder' }).serialize(creators));
}
exports.hashMetadataCreators = hashMetadataCreators;
//# sourceMappingURL=hash.js.map